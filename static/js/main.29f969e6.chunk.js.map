{"version":3,"sources":["App.js","index.js"],"names":["App","state","counter","tasks","handleAddTask","Object","toConsumableArray","_this","push","setState","handleRemoveTask","pop","handleClearTasks","splice","task","this","map","index","react_default","a","createElement","className","key","onClick","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"gOAyDeA,oNAlDXC,MAAQ,CACJC,QAAS,EACTC,MAAO,MAGZC,cAAgB,WACZ,IAAMD,EAAKE,OAAAC,EAAA,EAAAD,CAAOE,EAAKN,MAAME,OAC7BA,EAAMK,KAAKD,EAAKN,MAAMC,SAEtBK,EAAKE,SAAS,CACVP,QAASK,EAAKN,MAAMC,QAAU,EAC9BC,aAIRO,iBAAmB,WACf,IAAMP,EAAKE,OAAAC,EAAA,EAAAD,CAAOE,EAAKN,MAAME,OAC7BA,EAAMQ,MAENJ,EAAKE,SAAS,CACVN,aAIRS,iBAAmB,WACf,IAAMT,EAAKE,OAAAC,EAAA,EAAAD,CAAOE,EAAKN,MAAME,OAC7BA,EAAMU,OAAO,GAEbN,EAAKE,SAAS,CACVN,mFAMJ,IAAMW,EAAOC,KAAKd,MAAME,MAAMa,IAAI,SAACF,EAAMG,GAAP,OAAiBC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAOC,IAAKL,GAA1B,eAA6CC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAeJ,EAAM,MAErI,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAd,QAA6BH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAhB,QAC7BH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,MAAME,QAASR,KAAKX,eAAtC,OACAc,EAAAC,EAAAC,cAAA,UAAQC,UAAU,MAAME,QAASR,KAAKL,kBAAtC,UACAQ,EAAAC,EAAAC,cAAA,UAAQC,UAAU,MAAME,QAASR,KAAKH,kBAAtC,SACAM,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcP,WA7CtBU,cCClBC,IAASC,OAAOR,EAAAC,EAAAC,cAACO,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.29f969e6.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport './App.css';\n\n\nclass App extends Component {\n    \n    state = {\n        counter: 0,\n        tasks: []\n    }\n\n   handleAddTask = () => {\n       const tasks = [...this.state.tasks];\n       tasks.push(this.state.counter);\n       \n       this.setState({\n           counter: this.state.counter + 1,\n           tasks\n       })\n   }\n   \n   handleRemoveTask = () => {\n       const tasks = [...this.state.tasks];\n       tasks.pop();\n       \n       this.setState({\n           tasks\n       })\n   }\n   \n   handleClearTasks = () => {\n       const tasks = [...this.state.tasks];\n       tasks.splice(0);\n       \n       this.setState({\n           tasks\n       })\n   }\n    \n   render() {\n       \n       const task = this.state.tasks.map((task, index) => <li className='task' key={index}>Task number <span className='span-number'>{index+1}</span></li>)\n       \n       return (\n           <div className='app'>\n            <h1 className='header1'>TODO <span className='span-h1'>App</span></h1>\n            <button className='btn' onClick={this.handleAddTask}>Add</button>\n            <button className='btn' onClick={this.handleRemoveTask}>Remove</button>\n            <button className='btn' onClick={this.handleClearTasks}>Clear</button>\n            <ul className='tasks-list'>{task}</ul>\n           </div>\n       )\n   } \n\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}